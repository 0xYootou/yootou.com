<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>turf.js - 标签 - 芋头乱炖，大龄码农的自留地</title>
        <link>http://example.org/tags/turf.js/</link>
        <description>turf.js - 标签 - 芋头乱炖，大龄码农的自留地</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Thu, 01 Apr 2021 23:44:00 &#43;0000</lastBuildDate><atom:link href="http://example.org/tags/turf.js/" rel="self" type="application/rss+xml" /><item>
    <title>点到任意折线组的最短距离（及 turf.js 的实现解析）</title>
    <link>http://example.org/posts/turf-point-line-distance/</link>
    <pubDate>Thu, 01 Apr 2021 23:44:00 &#43;0000</pubDate><author>
        <name>芋头</name>
    </author><guid>http://example.org/posts/turf-point-line-distance/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/turf-poin-line-distance/cover.jpg" referrerpolicy="no-referrer">
            </div>问题定义： 有一点 Pt，有一任意长度和形状的折线 L： [[P1,P2],[p2,p3],[p3,p4]…] 求 Pt 与折线 L 的最近距离 N 问题澄清： 注意：折线 L 上离 Pt 最近的点，必然在折线上 使用场景： 对行车轨迹进行贴路修正，轨迹点与路上最短的距离的点既是修正后的点。 问题分析： 假设我们还不知道最终答案，甚至还不知晓解题思路（已经知道的同学先不急，这个题其实的确很简单） 我们先画个图分析下可能的思路，按照题目，我们画一个比较“复杂的场景” 其实这个题简单的地方就是，当你把图画出来，基本靠人眼可以一眼判断出答案，如上图，L 中距离 Pt 最近的点很容易用肉眼找到。 事实上，要找出点到折线的最短距离，必然需要遍历整条折线，计算某条线段与点之间的距离，并取其中最小的值。 那如何判断一个点到一条线段的最小距离？这里其实是这道题目最核心的逻辑，基于刚才我们的提示，线段上距离点最近的点，必然在线段内，而不可超出线段之外，我们穷举下点和]]></description>
</item></channel>
</rss>
